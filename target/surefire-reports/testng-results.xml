<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="20" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="LuxmedTest" duration-ms="130389" started-at="2018-01-03T13:33:12Z" finished-at="2018-01-03T13:35:22Z">
    <groups>
    </groups>
    <test name="MyTests" duration-ms="130389" started-at="2018-01-03T13:33:12Z" finished-at="2018-01-03T13:35:22Z">
      <class name="org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka">
        <test-method status="PASS" signature="arquillianBeforeSuite()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeSuite" is-config="true" duration-ms="927" started-at="2018-01-03T14:33:11Z" finished-at="2018-01-03T14:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeSuite -->
        <test-method status="PASS" signature="arquillianBeforeClass()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeClass" is-config="true" duration-ms="20" started-at="2018-01-03T14:33:12Z" finished-at="2018-01-03T14:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="4408" started-at="2018-01-03T14:33:12Z" finished-at="2018-01-03T14:33:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.LunchLuxmed() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="LunchLuxmed()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="LunchLuxmed" duration-ms="6884" started-at="2018-01-03T14:33:16Z" description="Otwieranie strony" finished-at="2018-01-03T14:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LunchLuxmed -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="2" started-at="2018-01-03T14:33:23Z" finished-at="2018-01-03T14:33:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.LunchLuxmed() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="334" started-at="2018-01-03T14:33:23Z" finished-at="2018-01-03T14:33:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.ChosePacjent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="ChosePacjent()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="ChosePacjent" duration-ms="9533" started-at="2018-01-03T14:33:24Z" description="Wybieranie opcji pacjent" finished-at="2018-01-03T14:33:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChosePacjent -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:33:33Z" finished-at="2018-01-03T14:33:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.ChosePacjent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="331" started-at="2018-01-03T14:33:33Z" finished-at="2018-01-03T14:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.CheckUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="CheckUrl()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="CheckUrl" duration-ms="296" started-at="2018-01-03T14:33:34Z" description="Potwierdzanie Url" finished-at="2018-01-03T14:33:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckUrl -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:33:34Z" finished-at="2018-01-03T14:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.CheckUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="285" started-at="2018-01-03T14:33:34Z" finished-at="2018-01-03T14:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.ClickRezerwacja()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="ClickRezerwacja()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="ClickRezerwacja" duration-ms="3255" started-at="2018-01-03T14:33:34Z" description="Wybieranie Rezerwacji" finished-at="2018-01-03T14:33:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickRezerwacja -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:33:37Z" finished-at="2018-01-03T14:33:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.ClickRezerwacja()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="162" started-at="2018-01-03T14:33:37Z" finished-at="2018-01-03T14:33:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.ChoseRodzajRezerwacji() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="ChoseRodzajRezerwacji()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="ChoseRodzajRezerwacji" duration-ms="1648" started-at="2018-01-03T14:33:38Z" description="Wybieranie rodzaju wizyty" finished-at="2018-01-03T14:33:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChoseRodzajRezerwacji -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:33:39Z" finished-at="2018-01-03T14:33:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.ChoseRodzajRezerwacji() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="156" started-at="2018-01-03T14:33:39Z" finished-at="2018-01-03T14:33:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.choseLocationSpecialistPerson() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="choseLocationSpecialistPerson()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="choseLocationSpecialistPerson" duration-ms="4488" started-at="2018-01-03T14:33:39Z" description="Wybór placówki" finished-at="2018-01-03T14:33:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- choseLocationSpecialistPerson -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:33:44Z" finished-at="2018-01-03T14:33:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.choseLocationSpecialistPerson() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="157" started-at="2018-01-03T14:33:44Z" finished-at="2018-01-03T14:33:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.choseSpecialist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="choseSpecialist()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="choseSpecialist" duration-ms="176" started-at="2018-01-03T14:33:44Z" description="Wybór specjalisty" finished-at="2018-01-03T14:33:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- choseSpecialist -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:33:44Z" finished-at="2018-01-03T14:33:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.choseSpecialist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="151" started-at="2018-01-03T14:33:44Z" finished-at="2018-01-03T14:33:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.choseData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="choseData()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="choseData" duration-ms="10419" started-at="2018-01-03T14:33:44Z" description="Wybór daty urodzenia" finished-at="2018-01-03T14:33:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- choseData -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:33:55Z" finished-at="2018-01-03T14:33:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.choseData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="163" started-at="2018-01-03T14:33:55Z" finished-at="2018-01-03T14:33:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.searchResults() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="searchResults()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="searchResults" duration-ms="14251" started-at="2018-01-03T14:33:55Z" description="Wyszukuj wizyty" finished-at="2018-01-03T14:34:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchResults -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:34:09Z" finished-at="2018-01-03T14:34:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.searchResults() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianBeforeTest" is-config="true" duration-ms="147" started-at="2018-01-03T14:34:09Z" finished-at="2018-01-03T14:34:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.goVisitTypeAndResults() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="goVisitTypeAndResults()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="goVisitTypeAndResults" duration-ms="10606" started-at="2018-01-03T14:34:09Z" description="Wybór rodzaju wizyty i dostepne terminy" finished-at="2018-01-03T14:34:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goVisitTypeAndResults -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterClass" is-config="true" duration-ms="2276" started-at="2018-01-03T14:34:20Z" finished-at="2018-01-03T14:34:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2018-01-03T14:34:20Z" finished-at="2018-01-03T14:34:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka.goVisitTypeAndResults() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterSuite()[pri:0, instance:org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka@4f933fd1]" name="arquillianAfterSuite" is-config="true" duration-ms="7" started-at="2018-01-03T14:35:22Z" finished-at="2018-01-03T14:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterSuite -->
      </class> <!-- org.Test.TestTest.LuxmedPacjentPediatraAgnieszkaZubrzycka -->
      <class name="org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists">
        <test-method status="PASS" signature="arquillianBeforeClass()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeClass" is-config="true" duration-ms="1" started-at="2018-01-03T14:34:22Z" finished-at="2018-01-03T14:34:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="2740" started-at="2018-01-03T14:34:22Z" finished-at="2018-01-03T14:34:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.LunchLuxmed1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="LunchLuxmed1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="LunchLuxmed1" duration-ms="6117" started-at="2018-01-03T14:34:25Z" description="Otwieranie strony" finished-at="2018-01-03T14:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LunchLuxmed1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:34:31Z" finished-at="2018-01-03T14:34:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.LunchLuxmed1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="228" started-at="2018-01-03T14:34:31Z" finished-at="2018-01-03T14:34:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.ChosePacjent1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="ChosePacjent1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="ChosePacjent1" duration-ms="9203" started-at="2018-01-03T14:34:31Z" description="Wybieranie opcji pacjent" finished-at="2018-01-03T14:34:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChosePacjent1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:34:40Z" finished-at="2018-01-03T14:34:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.ChosePacjent1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="325" started-at="2018-01-03T14:34:40Z" finished-at="2018-01-03T14:34:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.CheckUrl1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="CheckUrl1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="CheckUrl1" duration-ms="265" started-at="2018-01-03T14:34:41Z" description="Potwierdzanie Url" finished-at="2018-01-03T14:34:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckUrl1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:34:41Z" finished-at="2018-01-03T14:34:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.CheckUrl1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="306" started-at="2018-01-03T14:34:41Z" finished-at="2018-01-03T14:34:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.ClickRezerwacja1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="ClickRezerwacja1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="ClickRezerwacja1" duration-ms="4709" started-at="2018-01-03T14:34:41Z" description="Wybieranie Rezerwacji" finished-at="2018-01-03T14:34:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickRezerwacja1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2018-01-03T14:34:46Z" finished-at="2018-01-03T14:34:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.ClickRezerwacja1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="140" started-at="2018-01-03T14:34:46Z" finished-at="2018-01-03T14:34:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.ChoseRodzajRezerwacji1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="ChoseRodzajRezerwacji1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="ChoseRodzajRezerwacji1" duration-ms="1619" started-at="2018-01-03T14:34:46Z" description="Wybieranie rodzaju wizyty" finished-at="2018-01-03T14:34:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChoseRodzajRezerwacji1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:34:48Z" finished-at="2018-01-03T14:34:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.ChoseRodzajRezerwacji1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="203" started-at="2018-01-03T14:34:48Z" finished-at="2018-01-03T14:34:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.choseLocationSpecialistPerson1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="choseLocationSpecialistPerson1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="choseLocationSpecialistPerson1" duration-ms="4332" started-at="2018-01-03T14:34:48Z" description="Wybór placówki" finished-at="2018-01-03T14:34:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- choseLocationSpecialistPerson1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="5" started-at="2018-01-03T14:34:52Z" finished-at="2018-01-03T14:34:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.choseLocationSpecialistPerson1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="172" started-at="2018-01-03T14:34:52Z" finished-at="2018-01-03T14:34:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.choseSpecialist1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="choseSpecialist1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="choseSpecialist1" duration-ms="115" started-at="2018-01-03T14:34:53Z" description="Wybór specjalisty" finished-at="2018-01-03T14:34:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- choseSpecialist1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:34:53Z" finished-at="2018-01-03T14:34:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.choseSpecialist1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="142" started-at="2018-01-03T14:34:53Z" finished-at="2018-01-03T14:34:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.choseData1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="choseData1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="choseData1" duration-ms="10436" started-at="2018-01-03T14:34:53Z" description="Wybór daty urodzenia" finished-at="2018-01-03T14:35:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- choseData1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-03T14:35:03Z" finished-at="2018-01-03T14:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.choseData1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="154" started-at="2018-01-03T14:35:03Z" finished-at="2018-01-03T14:35:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.searchResults1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="searchResults1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="searchResults1" duration-ms="15528" started-at="2018-01-03T14:35:03Z" description="Wyszukuj wizyty" finished-at="2018-01-03T14:35:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchResults1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="2" started-at="2018-01-03T14:35:19Z" finished-at="2018-01-03T14:35:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.searchResults1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianBeforeTest" is-config="true" duration-ms="167" started-at="2018-01-03T14:35:19Z" finished-at="2018-01-03T14:35:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.printSpecWyniki1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="printSpecWyniki1()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="printSpecWyniki1" duration-ms="1000" started-at="2018-01-03T14:35:19Z" description="Print wszystkich specialistów z datami wolnego terminu" finished-at="2018-01-03T14:35:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printSpecWyniki1 -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2018-01-03T14:35:20Z" finished-at="2018-01-03T14:35:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists.printSpecWyniki1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists@4cc0edeb]" name="arquillianAfterClass" is-config="true" duration-ms="2307" started-at="2018-01-03T14:35:20Z" finished-at="2018-01-03T14:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
      </class> <!-- org.Test.TestTest.TestLuxmedPacjentPediatriaAllSpecialists -->
    </test> <!-- MyTests -->
  </suite> <!-- LuxmedTest -->
</testng-results>
